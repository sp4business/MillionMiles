!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("svg-gauge")):"function"==typeof define&&define.amd?define(["exports","@angular/core","svg-gauge"],t):t(e["angular-gauge"]={},e.ng.core,e.Gauge)}(this,function(e,t,a){"use strict";a=a&&a.hasOwnProperty("default")?a["default"]:a;var i=function(){return function(){this.dialStartAngle=135,this.dialEndAngle=45,this.dialRadius=40,this.min=0,this.max=100,this.showValue=!0,this.gaugeClass="gauge",this.dialClass="dial",this.valueDialClass="value",this.valueClass="value-text",this.animated=!1}}(),u=function(){function e(e,a){this.elm=e,this.defaults=a,this.gaugeCreated=new t.EventEmitter}return e.prototype.ngAfterViewInit=function(){var e=this,t={dialStartAngle:this.dialStartAngle,dialEndAngle:this.dialEndAngle,dialRadius:this.dialRadius,min:this.min,max:this.max,label:this.label,showValue:this.showValue,gaugeClass:this.gaugeClass,dialClass:this.dialClass,valueDialClass:this.valueDialClass,valueClass:this.valueClass,value:this.value,color:this.color};Object.keys(this.defaults).forEach(function(a){"undefined"==typeof t[a]&&(t[a]=e.defaults[a])}),Object.keys(t).forEach(function(e){"undefined"==typeof t[e]&&delete t[e]}),this.gauge=a(this.elm.nativeElement,t),this.gaugeCreated.emit({gauge:this.gauge}),this.updateValue()},e.prototype.ngOnChanges=function(e){e.value&&this.updateValue()},e.prototype.updateValue=function(){this.gauge&&(this.animated?this.gauge.setValueAnimated(this.value,this.animationDuration):this.gauge.setValue(this.value))},e}();u.decorators=[{type:t.Component,args:[{selector:"mwl-gauge",template:""}]}],u.ctorParameters=function(){return[{type:t.ElementRef},{type:i}]},u.propDecorators={dialStartAngle:[{type:t.Input}],dialEndAngle:[{type:t.Input}],dialRadius:[{type:t.Input}],min:[{type:t.Input}],max:[{type:t.Input}],label:[{type:t.Input}],color:[{type:t.Input}],showValue:[{type:t.Input}],gaugeClass:[{type:t.Input}],dialClass:[{type:t.Input}],valueDialClass:[{type:t.Input}],valueClass:[{type:t.Input}],value:[{type:t.Input}],animated:[{type:t.Input}],animationDuration:[{type:t.Input}],gaugeCreated:[{type:t.Output}]};var n=new t.InjectionToken("gauge defaults");function s(e){var t=new i;return Object.assign(t,e),t}var l=function(){function e(){}return e.forRoot=function(t){return void 0===t&&(t={}),{ngModule:e,providers:[{provide:n,useValue:t},{provide:i,useFactory:s,deps:[n]}]}},e}();l.decorators=[{type:t.NgModule,args:[{declarations:[u],exports:[u]}]}],l.ctorParameters=function(){return[]},e.USER_DEFAULTS=n,e.defaultsFactory=s,e.GaugeModule=l,e.ɵb=i,e.ɵa=u,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=angular-gauge.umd.min.js.map
